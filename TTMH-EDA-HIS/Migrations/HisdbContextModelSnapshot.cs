// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTMH_EDA_HIS.Data;

#nullable disable

namespace TTMH_EDA_HIS.Migrations
{
    [DbContext(typeof(HisdbContext))]
    partial class HisdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Cashier", b =>
                {
                    b.Property<string>("CasId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CasID");

                    b.HasKey("CasId")
                        .HasName("PK__Cashiers__6B6EF2C78E8D5CE5");

                    b.ToTable("Cashiers");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Chart", b =>
                {
                    b.Property<string>("ChaId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ChaID");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vdate")
                        .HasColumnType("datetime")
                        .HasColumnName("VDate");

                    b.HasKey("ChaId")
                        .HasName("PK__Charts__97A59C75CBFB1D4C");

                    b.ToTable("Charts");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.ChartsDrugsDosage", b =>
                {
                    b.Property<string>("ChaId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ChaID");

                    b.Property<string>("DrugId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DrugID");

                    b.Property<string>("DosId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DosID");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ChaId", "DrugId", "DosId")
                        .HasName("PK__Charts_D__43E0B46C2967DE43");

                    b.HasIndex("DosId");

                    b.HasIndex("DrugId");

                    b.ToTable("Charts_Drugs_Dosages", (string)null);
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Detail", b =>
                {
                    b.Property<string>("DetId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DetID");

                    b.Property<string>("CasId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CasID");

                    b.Property<decimal>("MedicalCost")
                        .HasColumnType("decimal(20, 0)");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PatientID");

                    b.Property<decimal>("Payable")
                        .HasColumnType("decimal(20, 0)");

                    b.Property<decimal>("Registration")
                        .HasColumnType("decimal(20, 0)");

                    b.HasKey("DetId")
                        .HasName("PK__Details__D8957AFCE2D73766");

                    b.HasIndex("CasId");

                    b.HasIndex("PatientId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Doctor", b =>
                {
                    b.Property<string>("DoctorId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DoctorID");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DoctorId")
                        .HasName("PK__Doctors__2DC00EDF9BB9663C");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.DoctorsPatientsChart", b =>
                {
                    b.Property<string>("DoctorId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DoctorID");

                    b.Property<string>("PatientId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PatientID");

                    b.Property<string>("ChaId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ChaID");

                    b.HasKey("DoctorId", "PatientId", "ChaId")
                        .HasName("PK__Doctors___20274777D9BDA64F");

                    b.HasIndex("ChaId");

                    b.HasIndex("PatientId");

                    b.ToTable("Doctors_Patients_Charts", (string)null);
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Dosage", b =>
                {
                    b.Property<string>("DosId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DosID");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DosId")
                        .HasName("PK__Dosages__4DFE76ACB6EE094D");

                    b.ToTable("Dosages");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Drug", b =>
                {
                    b.Property<string>("DrugId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DrugID");

                    b.Property<string>("AdverseReactions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Appearance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Atccode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ATCCode");

                    b.Property<string>("ClinicalUses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dcontent")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("DContent");

                    b.Property<string>("DrugName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("GenericName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nhicode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NHICode");

                    b.Property<string>("OtherInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PointOfHealthEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roaid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ROAID");

                    b.Property<string>("StorageConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestedUsage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(20, 0)");

                    b.Property<string>("WarningPrecautions")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Warning_Precautions");

                    b.HasKey("DrugId")
                        .HasName("PK__Drugs__908D66F6408F425E");

                    b.HasIndex("Roaid");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF1CB77EC3F");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Patient", b =>
                {
                    b.Property<string>("PatientId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PatientID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Blood")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CaseHistory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nhicard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NHICard");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PatientId")
                        .HasName("PK__Patients__970EC346C8B25736");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Pharmacist", b =>
                {
                    b.Property<string>("PhaId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PhaID");

                    b.HasKey("PhaId")
                        .HasName("PK__Pharmaci__5D18076B51E8930B");

                    b.ToTable("Pharmacists");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Prescription", b =>
                {
                    b.Property<string>("PresNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DrugDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PatientID");

                    b.Property<string>("PhaId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PhaID");

                    b.HasKey("PresNo")
                        .HasName("PK__Prescrip__1401F7AF47170057");

                    b.HasIndex("PatientId");

                    b.HasIndex("PhaId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.RoutesOfAdminstration", b =>
                {
                    b.Property<string>("Roaid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ROAID");

                    b.Property<string>("BodyParts")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Roaid")
                        .HasName("PK__RoutesOf__84E1649C98E0E0F3");

                    b.ToTable("RoutesOfAdminstrations");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Cashier", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.Employee", "Cas")
                        .WithOne("Cashier")
                        .HasForeignKey("TTMH_EDA_HIS.Models.Cashier", "CasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Cashiers_Employees");

                    b.Navigation("Cas");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.ChartsDrugsDosage", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.Chart", "Cha")
                        .WithMany("ChartsDrugsDosages")
                        .HasForeignKey("ChaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Charts_Drugs_Dosages_Charts");

                    b.HasOne("TTMH_EDA_HIS.Models.Dosage", "Dos")
                        .WithMany("ChartsDrugsDosages")
                        .HasForeignKey("DosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Charts_Drugs_Dosages_Dosages");

                    b.HasOne("TTMH_EDA_HIS.Models.Drug", "Drug")
                        .WithMany("ChartsDrugsDosages")
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Charts_Drugs_Dosages_Drugs");

                    b.Navigation("Cha");

                    b.Navigation("Dos");

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Detail", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.Cashier", "Cas")
                        .WithMany("Details")
                        .HasForeignKey("CasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Details_Cashiers");

                    b.HasOne("TTMH_EDA_HIS.Models.Patient", "Patient")
                        .WithMany("Details")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Details_Patients");

                    b.Navigation("Cas");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Doctor", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.Employee", "DoctorNavigation")
                        .WithOne("Doctor")
                        .HasForeignKey("TTMH_EDA_HIS.Models.Doctor", "DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Doctors_Employees");

                    b.Navigation("DoctorNavigation");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.DoctorsPatientsChart", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.Chart", "Cha")
                        .WithMany("DoctorsPatientsCharts")
                        .HasForeignKey("ChaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Doctors_Patients_Charts_Charts");

                    b.HasOne("TTMH_EDA_HIS.Models.Doctor", "Doctor")
                        .WithMany("DoctorsPatientsCharts")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Doctors_Patients_Charts_Doctors");

                    b.HasOne("TTMH_EDA_HIS.Models.Patient", "Patient")
                        .WithMany("DoctorsPatientsCharts")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Doctors_Patients_Charts_Patients");

                    b.Navigation("Cha");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Drug", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.RoutesOfAdminstration", "Roa")
                        .WithMany("Drugs")
                        .HasForeignKey("Roaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Drugs_RoutesOfAdminstrations");

                    b.Navigation("Roa");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Pharmacist", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.Employee", "Pha")
                        .WithOne("Pharmacist")
                        .HasForeignKey("TTMH_EDA_HIS.Models.Pharmacist", "PhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Pharmacists_Employees");

                    b.Navigation("Pha");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Prescription", b =>
                {
                    b.HasOne("TTMH_EDA_HIS.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Prescriptions_Patients");

                    b.HasOne("TTMH_EDA_HIS.Models.Pharmacist", "Pha")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Prescriptions_Pharmacists");

                    b.Navigation("Patient");

                    b.Navigation("Pha");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Cashier", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Chart", b =>
                {
                    b.Navigation("ChartsDrugsDosages");

                    b.Navigation("DoctorsPatientsCharts");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Doctor", b =>
                {
                    b.Navigation("DoctorsPatientsCharts");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Dosage", b =>
                {
                    b.Navigation("ChartsDrugsDosages");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Drug", b =>
                {
                    b.Navigation("ChartsDrugsDosages");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Employee", b =>
                {
                    b.Navigation("Cashier");

                    b.Navigation("Doctor");

                    b.Navigation("Pharmacist");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Patient", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("DoctorsPatientsCharts");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.Pharmacist", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("TTMH_EDA_HIS.Models.RoutesOfAdminstration", b =>
                {
                    b.Navigation("Drugs");
                });
#pragma warning restore 612, 618
        }
    }
}
